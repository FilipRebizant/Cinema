security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        in_memory:
            memory:
                users:
                    ryan:
                        password: ryanpass
                        roles: 'ROLE_USER'
                    admin:
                        # password is qwerty
                        password: $2y$12$/Oev5JWuCGhbCtKGUkOEIepJzM23YGHnn0Ru4q2sDribX4SmbmY.q 
                        roles: 'ROLE_ADMIN'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        main:
            pattern: ^/
            form_login:
                check_path: /login_check

                # the user is redirected here when they need to log in
                login_path: /admin

                # if true, forward the user to the login form instead of redirecting
                use_forward: false

                # login success redirecting options (read further below)
                always_use_default_target_path: false
                default_target_path:            /profile
                target_path_parameter:          _target_path
                use_referer:                    false

                # login failure redirecting options (read further below)
                failure_path:    /admin
                failure_forward: false
                
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

            logout:       true
            anonymous:    true
    
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

        
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    
    access_control:
        - { path: ^/movie/edit, role: ROLE_SUPER_ADMIN }
        - { path: ^/movie/delete, role: ROLE_SUPER_ADMIN }
        - { path: ^/movie/new, role: ROLE_SUPER_ADMIN }
        - { path: ^/register, role: ROLE_SUPER_ADMIN }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/admin, role: IS_AUTHENTICATED_ANONYMOUSLY }

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        
